ENTER_KEY = 13
$ ->
  $(".todo-list table tbody").sortable {
    update: (event, ui) ->
      task_ids = $.map $(event.target).find('tr'), (row) ->
        return $(row).data('task-id')
      project_id = $(event.target).parents('article').data('project-id')
      sort_project_tasks_path = "<%= Rails.application.routes.url_helpers.sort_project_tasks_path(0) %>"
      sort_project_tasks_path = sort_project_tasks_path.replace('0', project_id)
      $.ajax
        url: sort_project_tasks_path
        method: 'PUT'
        data: { project: { tasks: task_ids } }
  }

  todoHeaderHandlers = new TodoHeaderHandlers()
  todoHeaderHandlers.showActionButtons()
  todoHeaderHandlers.editTodoHeader()
  todoHeaderHandlers.removeTodo()
  todoHeaderHandlers.updateTodoHeader()

  todoBarHandlers = new TodoBarHandlers()
  todoBarHandlers.button()
  todoBarHandlers.keypress()

  todoListHandlers = new TodoListHandlers()
  todoListHandlers.showActions()
  todoListHandlers.finishTask()
  todoListHandlers.editTask()
  todoListHandlers.taskKeypress()
  todoListHandlers.taskBlur()
  todoListHandlers.removeTask()

class TodoHeaderHandlers
  showActionButtons: ->
    $('.content .list')
      .on 'mouseover', 'article .todo-header', (e) ->
        $(@).find('ul').removeClass('hidden')
      .on 'mouseout', 'article .todo-header', (e) ->
        $(@).find('ul').addClass('hidden')

  editTodoHeader: ->
    $('.content .list').on 'click', '.todo-header .todo-action-edit', (e) ->
      e.preventDefault()
      project_header = $(@).parents('.todo-header')
      project_title = project_header.find('h3').text()
      project_header
        .addClass('edit-mode')
        .find('input')
        .val(project_title)
        .focus()

  removeTodo: ->
    $('.content .list').on 'click', '.todo-header .todo-action-remove', (e) ->
      e.preventDefault()
      if confirm 'Are you sure ?'
        project = $(@).parents('article')
        project_id = project.data('project-id')
        project_path = "<%= Rails.application.routes.url_helpers.project_path(0) %>"
        project_path = project_path.replace('0', project_id)
        $.ajax
          url: project_path
          method: 'DELETE'
        .done (data) ->
          project.slideUp (e) =>
            @.remove

  updateTodoHeader: ->
    $('.content .list').on 'blur', '.todo-header input', (e) =>
      @._cancelEditing($(e.currentTarget))

    $('.content .list').on 'keypress', '.todo-header input', (e) =>
      if e.which is ENTER_KEY
        @._cancelEditing($(e.currentTarget))

  _cancelEditing: (input) ->
    project_title = input.val()
    project_id = $(input).parents('article').data('project-id')
    project_path = "<%= Rails.application.routes.url_helpers.project_path(0) %>"
    project_path = project_path.replace('0', project_id)
    $.ajax
      url: project_path
      method: 'PUT'
      data: { project: { title:  project_title } }
    .done (data) ->
      input.parent('.todo-header')
        .removeClass('edit-mode')
        .find('h3')
        .text(project_title)

class TodoBarHandlers
  button: ->
    $('.todo-bar-new button').on 'click', (e) =>
      e.preventDefault()
      @._newTask($(e.currentTarget))

  keypress: ->
    $('.todo-bar-new input').on 'keypress', (e) =>
      if e.which is ENTER_KEY
        e.preventDefault()
        @._newTask($(e.currentTarget).next('button'))

  _newTask: (button) ->
    project_id = button.parents('article').data('project-id')
    project_tasks_path = "<%= Rails.application.routes.url_helpers.project_tasks_path(0) %>"
    project_tasks_path = project_tasks_path.replace('0', project_id)
    task_description = button.prev('input').val()
    $.ajax
      url: project_tasks_path
      method: 'POST',
      data: { task: { description: task_description } }
    .done (data) ->
      button.prev('input').val('')

class TodoListHandlers
  showActions: ->
    $('.todo-list')
      .on 'mouseover', 'tr', ->
        $(@).find('ul').removeClass('hidden')
      .on 'mouseout', 'tr', ->
        $(@).find('ul').addClass('hidden')

  finishTask: ->
    $('.todo-list table').on 'change', 'tr .todo-list-checkbox input', (e) =>
      @._completeTask($(e.currentTarget))

  editTask: ->
    $('.todo-list').on 'click', 'tr .todo-list-task-edit', (e) =>
      e.preventDefault()
      todoListTask = $(e.currentTarget).parents('tr').find('.todo-list-task')
      unless todoListTask.hasClass('edit-mode')
        todoListTask.addClass('edit-mode')
        textToBeEdited = todoListTask.find('p').text()
        todoListTask.append(@._editTaskInput()).find('input').val(textToBeEdited).focus()

  taskKeypress: ->
    $('.todo-list').on 'keypress', 'tr .todo-list-task input', (e) =>
      if e.which is ENTER_KEY
        e.preventDefault()
        @._cancelTaskEditing($(e.currentTarget))

  taskBlur: ->
    $('.todo-list').on 'blur', 'tr .todo-list-task input', (e) =>
      e.preventDefault()
      @._cancelTaskEditing($(e.currentTarget))

  removeTask: ->
    $('.todo-list').on 'click', 'tr .todo-list-task-delete', (e) =>
      e.preventDefault()
      if confirm 'Are you sure ?'
        task = $(e.currentTarget).parents('tr')
        task_id = task.data('task-id')
        project_id = $(e.currentTarget).parents('article').data('project-id')
        project_task_path = @._projectTaskPath(project_id, task_id)
        $.ajax
          url: project_task_path
          method: 'DELETE'
        .done (data) ->
          task.remove()

  _completeTask: (checkbox) ->
    checkbox.parents('tr').toggleClass('completed-task')
    project_id = checkbox.parents('article').data('project-id')
    task_id = checkbox.parents('tr').data('task-id')
    complete_project_task_path = "<%= Rails.application.routes.url_helpers.complete_project_task_path(0, 12345) %>"
    complete_project_task_path = complete_project_task_path.replace('0', project_id).replace('12345', task_id)
    $.ajax
      url: complete_project_task_path
      method: 'PUT',
      data: { task: { complete:  checkbox.is(':checked') } }

  _cancelTaskEditing: (input) ->
    project_id = input.parents('article').data('project-id')
    task_id = input.parents('tr').data('task-id')
    project_task_path = @._projectTaskPath(project_id, task_id)
    task_description = input.val()
    $.ajax
      url: project_task_path
      method: 'PUT',
      data: { task: { description:  task_description } }
    .done (data) ->
      parent = input.parent()
      parent.find('p').text(task_description)
      parent.find('input')?.remove()
      parent.removeClass('edit-mode')

  _projectTaskPath: (project_id, task_id) ->
    path = "<%= Rails.application.routes.url_helpers.project_task_path(0, 12345) %>"
    path = path.replace('0', project_id).replace('12345', task_id)

  _editTaskInput: () ->
    "<input type='text' name='' value=''>"